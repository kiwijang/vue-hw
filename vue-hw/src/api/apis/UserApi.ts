// tslint:disable
/**
 * JWTToken_Auth_API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    GetUserVM,
    UpdateUserVM,
} from '../models';

export interface ApiUserGetUserPostRequest {
    email?: string;
}

export interface ApiUserUpdateUserPostRequest {
    updateUserVM?: UpdateUserVM;
}

/**
 * no description
 */
export class UserApi extends BaseAPI {

    /**
     */
    apiUserGetUserPost({ email }: ApiUserGetUserPostRequest): Observable<GetUserVM>
    apiUserGetUserPost({ email }: ApiUserGetUserPostRequest, opts?: OperationOpts): Observable<AjaxResponse<GetUserVM>>
    apiUserGetUserPost({ email }: ApiUserGetUserPostRequest, opts?: OperationOpts): Observable<GetUserVM | AjaxResponse<GetUserVM>> {

        const headers: HttpHeaders = {
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // Bearer authentication
        };

        const query: HttpQuery = {};

        if (email != null) { query['email'] = email; }

        return this.request<GetUserVM>({
            url: '/api/User/GetUser',
            method: 'POST',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    apiUserUpdateUserPost({ updateUserVM }: ApiUserUpdateUserPostRequest): Observable<void>
    apiUserUpdateUserPost({ updateUserVM }: ApiUserUpdateUserPostRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    apiUserUpdateUserPost({ updateUserVM }: ApiUserUpdateUserPostRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
            ...(this.configuration.apiKey && { 'Authorization': this.configuration.apiKey('Authorization') }), // Bearer authentication
        };

        return this.request<void>({
            url: '/api/User/UpdateUser',
            method: 'POST',
            headers,
            body: updateUserVM,
        }, opts?.responseOpts);
    };

}
